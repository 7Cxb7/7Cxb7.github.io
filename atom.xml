<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>CuiXB 7</title>
  
  
  <link href="http://example.com/atom.xml" rel="self"/>
  
  <link href="http://example.com/"/>
  <updated>2023-08-29T03:25:06.068Z</updated>
  <id>http://example.com/</id>
  
  <author>
    <name>CXB7</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Dijkstra-路径规划</title>
    <link href="http://example.com/2023/08/29/Dijkstra/"/>
    <id>http://example.com/2023/08/29/Dijkstra/</id>
    <published>2023-08-29T02:38:08.000Z</published>
    <updated>2023-08-29T03:25:06.068Z</updated>
    
    <content type="html"><![CDATA[<h2 id="背景介绍"><a href="#背景介绍" class="headerlink" title="背景介绍"></a>背景介绍</h2><p>本内容以<strong>Dijkstra</strong>算法为基础，同时以<strong>MySQL</strong>数据库中存储的20万+北京各餐馆间距为数据源进行导航模拟实验，通过简单的Java图形界面进行算法的基础验证。</p><h2 id="算法介绍"><a href="#算法介绍" class="headerlink" title="算法介绍"></a>算法介绍</h2><p>迪杰斯特拉算法（<strong>Dijkstra’s Algorithm</strong>）是一种用于解决单源最短路径问题的图算法，它能够找到一个图中从单个起始节点到其他所有节点的最短路径。</p><p>这个算法在实际中有许多应用，在交通运输领域，<strong>Dijkstra</strong>算法有着广泛的应用，导航系统是一种利用地理信息和计算机技术来为用户提供路线指引和导航服务的应用程序或设备。<strong>Dijkstra</strong>算法在导航系统中扮演了重要角色，主要用于计算最短路径，帮助用户找到从出发地到目的地的最佳路线。路线规划是导航系统中的核心功能之一，它旨在通过计算最佳路径，将用户从出发地点引导到目的地点。</p><h2 id="简单示例"><a href="#简单示例" class="headerlink" title="简单示例"></a>简单示例</h2><p>当涉及到迪杰斯特拉算法以及可能的Java代码时，我们可以通过以下步骤来详细说明算法的实现过程。在这个例子中，我们将使用邻接矩阵来表示图，并使用迪杰斯特拉算法计算节点之间的最短路径。</p><p>假设我们有以下节点和它们之间的理论距离：</p><table><thead><tr><th>节点</th><th>A</th><th>B</th><th>C</th><th>D</th></tr></thead><tbody><tr><td>A</td><td>0</td><td>4</td><td>2</td><td>-</td></tr><tr><td>B</td><td>4</td><td>0</td><td>5</td><td>10</td></tr><tr><td>C</td><td>2</td><td>5</td><td>0</td><td>3</td></tr><tr><td>D</td><td>-</td><td>10</td><td>3</td><td>0</td></tr></tbody></table><h3 id="设计思路"><a href="#设计思路" class="headerlink" title="设计思路"></a>设计思路</h3><p>当使用迪杰斯特拉算法进行路径规划时，它遵循一系列步骤来找到从起点到所有其他节点的最短路径。以下是这些步骤的更简单的描述：</p><ol><li><p><strong>起始设置：</strong> 首先，将起点的距离设为0，其他节点的距离设为无穷大。创建一个优先级队列（也称为最小堆），将起始节点加入队列。</p></li><li><p><strong>选择最近节点：</strong> 从队列中选出距离起点最近的节点作为当前节点。</p></li><li><p><strong>更新相邻节点：</strong> 对于当前节点的每个邻居，计算从起点经过当前节点到达邻居的距离。如果这个距离小于当前已知的最短距离，就更新邻居的最短距离。</p></li><li><p><strong>标记访问：</strong> 将当前节点标记为已访问，以免重复处理。</p></li><li><p><strong>重复迭代：</strong> 重复上述步骤，从队列中选出下一个距离起点最近的未访问节点。继续这个过程，直到队列中没有未访问节点。</p></li></ol><p>这些步骤确保了迪杰斯特拉算法能够有效地找到起点到其他所有节点的最短路径。算法的关键在于优先级队列，它确保每次选择距离最小的节点，从而逐步更新最短路径信息。最终，算法将计算出起点到各个节点的最短距离，这些距离信息可以用于确定最佳的路径规划。</p><h3 id="Java代码示例"><a href="#Java代码示例" class="headerlink" title="Java代码示例"></a>Java代码示例</h3><p>以下是迪杰斯特拉算法的步骤以及相关的Java代码示例：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.Arrays;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">DijkstraAlgorithm</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">dijkstra</span><span class="params">(<span class="type">int</span>[][] graph, <span class="type">int</span> startNode)</span> &#123;</span><br><span class="line">        <span class="type">int</span> <span class="variable">numNodes</span> <span class="operator">=</span> graph.length;</span><br><span class="line">        <span class="type">int</span>[] distances = <span class="keyword">new</span> <span class="title class_">int</span>[numNodes];</span><br><span class="line">        <span class="type">boolean</span>[] visited = <span class="keyword">new</span> <span class="title class_">boolean</span>[numNodes];</span><br><span class="line"></span><br><span class="line">        Arrays.fill(distances, Integer.MAX_VALUE);</span><br><span class="line">        distances[startNode] = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; numNodes - <span class="number">1</span>; i++) &#123;</span><br><span class="line">            <span class="type">int</span> <span class="variable">minDistanceNode</span> <span class="operator">=</span> findMinDistanceNode(distances, visited);</span><br><span class="line">            visited[minDistanceNode] = <span class="literal">true</span>;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">j</span> <span class="operator">=</span> <span class="number">0</span>; j &lt; numNodes; j++) &#123;</span><br><span class="line">                <span class="keyword">if</span> (!visited[j] &amp;&amp; graph[minDistanceNode][j] != -<span class="number">1</span> &amp;&amp; </span><br><span class="line">                    distances[minDistanceNode] + graph[minDistanceNode][j] &lt; distances[j]) &#123;</span><br><span class="line">                    distances[j] = distances[minDistanceNode] + graph[minDistanceNode][j];</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        System.out.println(<span class="string">&quot;Node\tDistance from Start Node&quot;</span>);</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; numNodes; i++) &#123;</span><br><span class="line">            System.out.println(i + <span class="string">&quot;\t\t&quot;</span> + distances[i]);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="type">int</span> <span class="title function_">findMinDistanceNode</span><span class="params">(<span class="type">int</span>[] distances, <span class="type">boolean</span>[] visited)</span> &#123;</span><br><span class="line">        <span class="type">int</span> <span class="variable">minDistance</span> <span class="operator">=</span> Integer.MAX_VALUE;</span><br><span class="line">        <span class="type">int</span> <span class="variable">minDistanceNode</span> <span class="operator">=</span> -<span class="number">1</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; distances.length; i++) &#123;</span><br><span class="line">            <span class="keyword">if</span> (!visited[i] &amp;&amp; distances[i] &lt; minDistance) &#123;</span><br><span class="line">                minDistance = distances[i];</span><br><span class="line">                minDistanceNode = i;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> minDistanceNode;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">int</span>[][] graph = &#123;</span><br><span class="line">            &#123; <span class="number">0</span>, <span class="number">4</span>, <span class="number">2</span>, -<span class="number">1</span> &#125;,</span><br><span class="line">            &#123; <span class="number">4</span>, <span class="number">0</span>, <span class="number">5</span>, <span class="number">10</span> &#125;,</span><br><span class="line">            &#123; <span class="number">2</span>, <span class="number">5</span>, <span class="number">0</span>, <span class="number">3</span> &#125;,</span><br><span class="line">            &#123; -<span class="number">1</span>, <span class="number">10</span>, <span class="number">3</span>, <span class="number">0</span> &#125;</span><br><span class="line">        &#125;;</span><br><span class="line"></span><br><span class="line">        <span class="type">int</span> <span class="variable">startNode</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line">        dijkstra(graph, startNode);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这段Java代码演示了如何使用迪杰斯特拉算法计算从起始节点到其他节点的最短路径。在代码中，我们使用邻接矩阵表示图，其中-1表示节点之间没有直接连接。算法通过迭代查找未访问的节点中距离最小的节点，并更新最短路径。最终，我们会得到从起始节点到每个节点的最短距离。</p><p>请注意，这个示例只是一个简单的演示，以介绍迪杰斯特拉算法的基本实现原理，下面为本问题具体实现。</p><h2 id="具体实现"><a href="#具体实现" class="headerlink" title="具体实现"></a>具体实现</h2><p>在上述例子中运用了数组存储相关图的信息，但在实际运用中，数据量巨大导致数组存储出现运算速度慢和越界情况，在此测试中我们使用<strong>LinkedList</strong>集合进行存储，既方便增删也便于计算。</p><h3 id="数据库信息"><a href="#数据库信息" class="headerlink" title="数据库信息"></a>数据库信息</h3><p>以下为本次所使用的数据信息，为北京市饭店间间距表，由<strong>CSV</strong>文件导入到<strong>DataGrip</strong>中后共287749行，下面为其中一页，该数据集的格式为：饭店1ID，饭店1名称，饭点2ID，饭店2名称，两饭店间距。</p><img src="https://cxb7.oss-cn-hangzhou.aliyuncs.com/restaurantDistance.png" title="" alt="" data-align="center"><h3 id="Java代码"><a href="#Java代码" class="headerlink" title="Java代码"></a>Java代码</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Edge</span> &#123;</span><br><span class="line">    <span class="comment">// 起始定点</span></span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span> s;</span><br><span class="line">    <span class="comment">// 终止定点</span></span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span> t;</span><br><span class="line">    <span class="comment">// 边的权重</span></span><br><span class="line">    <span class="keyword">public</span> <span class="type">double</span> weight;</span><br><span class="line"></span><br><span class="line">    Edge(<span class="type">int</span> s, <span class="type">int</span> t, <span class="type">double</span> weight) &#123;</span><br><span class="line">        <span class="built_in">this</span>.s = s;</span><br><span class="line">        <span class="built_in">this</span>.t = t;</span><br><span class="line">        <span class="built_in">this</span>.weight = weight;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.LinkedList;</span><br><span class="line"><span class="keyword">import</span> java.util.Queue;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Graph</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 顶点个数（顶点编号从0开始）</span></span><br><span class="line">    <span class="keyword">private</span> <span class="type">int</span> v;</span><br><span class="line"></span><br><span class="line">    <span class="type">double</span> d2;</span><br><span class="line"></span><br><span class="line">    String s1=<span class="string">&quot;512324&quot;</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 记录每个顶点的边</span></span><br><span class="line">    <span class="keyword">private</span> LinkedList&lt;Edge&gt;[] adj;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">Graph</span><span class="params">(<span class="type">int</span> v)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.v = v;</span><br><span class="line">        <span class="built_in">this</span>.adj = <span class="keyword">new</span> <span class="title class_">LinkedList</span>[v];</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; v; i++) &#123;</span><br><span class="line">            adj[i] = <span class="keyword">new</span> <span class="title class_">LinkedList</span>();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 添加一条边，从s到达t</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">addEdge</span><span class="params">(<span class="type">int</span> s, <span class="type">int</span> t, <span class="type">double</span> weight)</span> &#123;</span><br><span class="line">        <span class="type">Edge</span> <span class="variable">edge</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Edge</span>(s, t, weight);</span><br><span class="line">        adj[s].add(edge);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 采用迪杰斯特拉算法找出从s到t的最短路径</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">dijkstra</span><span class="params">(<span class="type">int</span> s, <span class="type">int</span> t)</span> &#123;</span><br><span class="line">        <span class="type">double</span>[] dist = <span class="keyword">new</span> <span class="title class_">double</span>[v];    <span class="comment">// 记录s到每个顶点的最小距离，数组下标表示顶点编号，值表示最小距离</span></span><br><span class="line">        <span class="type">boolean</span>[] flag = <span class="keyword">new</span> <span class="title class_">boolean</span>[v];    <span class="comment">// 记录遍历过的顶点，数组下标表示顶点编号，值表示是否遍历过该顶点</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; v; i++) &#123;</span><br><span class="line">            dist[i] = Integer.MAX_VALUE;    <span class="comment">// 初始状态下，将顶点s到其他顶点的距离都设置为无穷大</span></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="type">int</span>[] predecessor = <span class="keyword">new</span> <span class="title class_">int</span>[v];     <span class="comment">// 记录路径，索引表示顶点编号，值表示到达当前顶点的顶点是哪一个</span></span><br><span class="line">        Queue&lt;Integer&gt; queue = <span class="keyword">new</span> <span class="title class_">LinkedList</span>&lt;&gt;();</span><br><span class="line">        queue.add(s);</span><br><span class="line">        dist[s] = <span class="number">0</span>;    </span><br><span class="line">        <span class="keyword">while</span> (!queue.isEmpty()) &#123;</span><br><span class="line">            <span class="type">Integer</span> <span class="variable">vertex</span> <span class="operator">=</span> queue.poll();</span><br><span class="line">            <span class="keyword">if</span> (flag[vertex]) <span class="keyword">continue</span>; <span class="comment">// 已经遍历过该顶点，就不再遍历</span></span><br><span class="line">            flag[vertex] = <span class="literal">true</span>;</span><br><span class="line">            <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; adj[vertex].size(); i++) &#123;</span><br><span class="line">                <span class="type">Edge</span> <span class="variable">edge</span> <span class="operator">=</span> adj[vertex].get(i);</span><br><span class="line">                <span class="keyword">if</span> (dist[vertex] &lt; (dist[edge.t] - edge.weight)) &#123;  <span class="comment">// 如果出现了比当前路径小的方式，就更新为更小路径</span></span><br><span class="line">                    dist[edge.t] = dist[vertex] + edge.weight;</span><br><span class="line">                    predecessor[edge.t] = vertex;</span><br><span class="line">                &#125;</span><br><span class="line">                queue.add(edge.t);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">// 打印路径</span></span><br><span class="line">        d2=dist[t];</span><br><span class="line">        System.out.println(<span class="string">&quot;最短距离：&quot;</span> + d2);</span><br><span class="line">        System.out.print(s);</span><br><span class="line">        print(s, t, predecessor);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 打印路径(回溯)</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">print</span><span class="params">(<span class="type">int</span> s, <span class="type">int</span> t, <span class="type">int</span>[] predecessor)</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (t == s) &#123;</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        print(s, predecessor[t], predecessor);</span><br><span class="line">        System.out.print(<span class="string">&quot; -&gt; &quot;</span> + t);</span><br><span class="line">        s1 = s1+<span class="string">&quot; -&gt; &quot;</span> + t;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> javax.swing.*;</span><br><span class="line"><span class="keyword">import</span> java.awt.*;</span><br><span class="line"><span class="keyword">import</span> java.awt.event.ActionEvent;</span><br><span class="line"><span class="keyword">import</span> java.awt.event.ActionListener;</span><br><span class="line"><span class="keyword">import</span> java.sql.*;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">dis1</span> <span class="keyword">extends</span> <span class="title class_">JFrame</span> &#123;</span><br><span class="line">    <span class="type">double</span> data[][];</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">dis1</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="type">Container</span> <span class="variable">frame</span> <span class="operator">=</span> getContentPane();</span><br><span class="line"></span><br><span class="line">        frame.setLayout(<span class="literal">null</span>);</span><br><span class="line"></span><br><span class="line">        <span class="type">JLabel</span> <span class="variable">IDStr</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">JLabel</span>(<span class="string">&quot;请输入起始餐馆名称:&quot;</span>);</span><br><span class="line">        IDStr.setBounds(<span class="number">60</span>, <span class="number">50</span>, <span class="number">130</span>, <span class="number">25</span>);</span><br><span class="line">        frame.add(IDStr);</span><br><span class="line"></span><br><span class="line">        <span class="type">JTextField</span> <span class="variable">userID</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">JTextField</span>();</span><br><span class="line">        userID.setBounds(<span class="number">220</span>, <span class="number">50</span>, <span class="number">120</span>, <span class="number">25</span>);</span><br><span class="line">        frame.add(userID);</span><br><span class="line"></span><br><span class="line">        <span class="type">JLabel</span> <span class="variable">IDStr1</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">JLabel</span>(<span class="string">&quot;请输入目的餐馆名称:&quot;</span>);</span><br><span class="line">        IDStr1.setBounds(<span class="number">60</span>, <span class="number">100</span>, <span class="number">130</span>, <span class="number">25</span>);</span><br><span class="line">        frame.add(IDStr1);</span><br><span class="line"></span><br><span class="line">        <span class="type">JTextField</span> <span class="variable">userID1</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">JTextField</span>();</span><br><span class="line">        userID1.setBounds(<span class="number">220</span>, <span class="number">100</span>, <span class="number">200</span>, <span class="number">25</span>);</span><br><span class="line">        frame.add(userID1);</span><br><span class="line"></span><br><span class="line"><span class="comment">//        JPanel j=new JPanel();</span></span><br><span class="line"><span class="comment">//        j.add(result); frame.add(j,BorderLayout.SOUTH);</span></span><br><span class="line"></span><br><span class="line">        <span class="type">JButton</span> <span class="variable">button1</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">JButton</span>(<span class="string">&quot;确定&quot;</span>);</span><br><span class="line">        button1.setBounds(<span class="number">90</span>, <span class="number">150</span>, <span class="number">70</span>, <span class="number">25</span>);</span><br><span class="line">        frame.add(button1);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        button1.addActionListener(<span class="keyword">new</span> <span class="title class_">ActionListener</span>() &#123;</span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">actionPerformed</span><span class="params">(ActionEvent e)</span> &#123;</span><br><span class="line">                <span class="type">String</span> <span class="variable">s1</span> <span class="operator">=</span> userID.getText().trim();</span><br><span class="line">                <span class="type">String</span> <span class="variable">s2</span> <span class="operator">=</span> userID1.getText().trim();</span><br><span class="line">                <span class="type">int</span> name1;</span><br><span class="line">                <span class="type">int</span> name2;</span><br><span class="line">                <span class="type">String</span> <span class="variable">driver</span> <span class="operator">=</span> <span class="string">&quot;com.mysql.cj.jdbc.Driver&quot;</span>;</span><br><span class="line">                <span class="type">String</span> <span class="variable">url</span> <span class="operator">=</span> <span class="string">&quot;jdbc:mysql://localhost:3306/restaurant&quot;</span>;</span><br><span class="line">                <span class="type">String</span> <span class="variable">user</span> <span class="operator">=</span> <span class="string">&quot;root&quot;</span>;</span><br><span class="line">                <span class="type">String</span> <span class="variable">password</span> <span class="operator">=</span> <span class="string">&quot;root&quot;</span>;</span><br><span class="line">                <span class="keyword">try</span> &#123;</span><br><span class="line">                    Class.forName(driver);</span><br><span class="line">                &#125; <span class="keyword">catch</span> (ClassNotFoundException ex) &#123;</span><br><span class="line">                    <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">RuntimeException</span>(ex);</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">try</span> &#123;</span><br><span class="line">                    <span class="type">Connection</span> <span class="variable">conn</span> <span class="operator">=</span> DriverManager.getConnection(url, user, password);</span><br><span class="line">                    <span class="type">String</span> <span class="variable">sql</span> <span class="operator">=</span> <span class="string">&quot;select shopid1,shopid2,dis from distance;&quot;</span>;</span><br><span class="line">                    String sql2=<span class="string">&quot;select shopid2 from distance where name2=?&quot;</span>;</span><br><span class="line">                    String sql3=<span class="string">&quot;select shopid1 from distance where name1=?&quot;</span>;</span><br><span class="line">                    PreparedStatement ps=conn.prepareStatement(sql2);</span><br><span class="line">                    ps.setString(<span class="number">1</span>,s2);</span><br><span class="line">                    ResultSet rss=ps.executeQuery();</span><br><span class="line">                    rss.next();</span><br><span class="line">                    name2=rss.getInt(<span class="number">1</span>);</span><br><span class="line">                    PreparedStatement ps1=conn.prepareStatement(sql3);</span><br><span class="line">                    ps1.setString(<span class="number">1</span>,s1);</span><br><span class="line">                    ResultSet rss1=ps1.executeQuery();</span><br><span class="line">                    rss1.next();</span><br><span class="line">                    name1=rss1.getInt(<span class="number">1</span>);</span><br><span class="line">                    <span class="type">Statement</span> <span class="variable">stmt</span> <span class="operator">=</span> conn.createStatement(ResultSet.TYPE_SCROLL_SENSITIVE, ResultSet.CONCUR_UPDATABLE);</span><br><span class="line">                    <span class="type">ResultSet</span> <span class="variable">rs</span> <span class="operator">=</span> stmt.executeQuery(sql);</span><br><span class="line">                    rs.last();</span><br><span class="line">                    <span class="type">int</span> <span class="variable">n</span> <span class="operator">=</span> rs.getRow();</span><br><span class="line">                    data = <span class="keyword">new</span> <span class="title class_">double</span>[n][<span class="number">3</span>];</span><br><span class="line">                    rs.beforeFirst();</span><br><span class="line">                    <span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line">                    <span class="keyword">while</span> (rs.next()) &#123;</span><br><span class="line">                        data[i][<span class="number">0</span>] = rs.getInt(<span class="number">1</span>);</span><br><span class="line">                        data[i][<span class="number">1</span>] = rs.getInt(<span class="number">2</span>);</span><br><span class="line">                        data[i][<span class="number">2</span>] = rs.getDouble(<span class="number">3</span>);</span><br><span class="line">                        i++;</span><br><span class="line">                    &#125;</span><br><span class="line">                    <span class="type">Graph</span> <span class="variable">graph</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Graph</span>(<span class="number">1000000</span>);</span><br><span class="line">                    <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">m</span> <span class="operator">=</span> <span class="number">0</span>; m &lt; n - <span class="number">1</span>; m++) &#123;</span><br><span class="line">                        graph.addEdge(<span class="keyword">new</span> <span class="title class_">Double</span>(data[m][<span class="number">0</span>]).intValue(), <span class="keyword">new</span> <span class="title class_">Double</span>(data[m][<span class="number">1</span>]).intValue(), data[m][<span class="number">2</span>]);</span><br><span class="line">                    &#125;</span><br><span class="line">                    graph.dijkstra(name1, name2);</span><br><span class="line"><span class="comment">//                    JLabel result=new JLabel(&quot;最短距离:&quot;+graph.d2);</span></span><br><span class="line"><span class="comment">//                    result.setBounds(80,230,150,40);</span></span><br><span class="line"><span class="comment">//                    frame.add(result);</span></span><br><span class="line">                    JOptionPane.showMessageDialog(<span class="literal">null</span>, <span class="string">&quot;最短距离：&quot;</span> + graph.d2 + <span class="string">&quot;\n&quot;</span> + graph.s1, <span class="string">&quot;最短距离&quot;</span>, JOptionPane.NO_OPTION);</span><br><span class="line"><span class="comment">//                    System.out.println(&quot;\n&quot; + graph.d2);</span></span><br><span class="line">                &#125; <span class="keyword">catch</span> (SQLException ex) &#123;</span><br><span class="line">                    <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">RuntimeException</span>(ex);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//    public static void main(String[] args) &#123;</span></span><br><span class="line"><span class="comment">//        dis1 d=new dis1();</span></span><br><span class="line"><span class="comment">//        d.d();</span></span><br><span class="line"><span class="comment">//    &#125;</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="运行结果"><a href="#运行结果" class="headerlink" title="运行结果"></a>运行结果</h3><p>在饭店信息数据库中，随机选择两组饭店进行最短路径规划测试，成功计算出最短路经，并利用回溯的方法在最短路经下打印出该路径所经过的所有饭店的ID，可根据ID来确定最终路线。（该测试中数据库信息只有各个饭店之间间距，所以所有路线都是以饭店为中间点，实际中可以在数据库中存入各种建筑间位置信息来规划最短路经）</p><img src="https://cxb7.oss-cn-hangzhou.aliyuncs.com/restaurantResult1.png" title="" alt="" data-align="center"><img src="https://cxb7.oss-cn-hangzhou.aliyuncs.com/restaurantResult2.png" title="" alt="" data-align="center"><h2 id="Last"><a href="#Last" class="headerlink" title="Last"></a>Last</h2><p>本次测试仅在理想状态下进行，计算结果为理论上的最短路经。未考虑实际路况，在实际情况中路线规划需要考虑多种因素，包括道路网络、路段距离、交通状况、实时数据以及用户的偏好。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;背景介绍&quot;&gt;&lt;a href=&quot;#背景介绍&quot; class=&quot;headerlink&quot; title=&quot;背景介绍&quot;&gt;&lt;/a&gt;背景介绍&lt;/h2&gt;&lt;p&gt;本内容以&lt;strong&gt;Dijkstra&lt;/strong&gt;算法为基础，同时以&lt;strong&gt;MySQL&lt;/strong&gt;数据</summary>
      
    
    
    
    <category term="算法" scheme="http://example.com/categories/%E7%AE%97%E6%B3%95/"/>
    
    
  </entry>
  
  <entry>
    <title>markdown示例</title>
    <link href="http://example.com/2023/08/27/markdownExample/"/>
    <id>http://example.com/2023/08/27/markdownExample/</id>
    <published>2023-08-27T14:16:55.000Z</published>
    <updated>2023-08-27T14:48:22.985Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Editor-md"><a href="#Editor-md" class="headerlink" title="Editor.md"></a>Editor.md</h1><p><img src="https://pandao.github.io/editor.md/images/logos/editormd-logo-180x180.png"></p><p><img src="https://img.shields.io/github/stars/pandao/editor.md.svg"> <img src="https://img.shields.io/github/forks/pandao/editor.md.svg"> <img src="https://img.shields.io/github/tag/pandao/editor.md.svg"> <img src="https://img.shields.io/github/release/pandao/editor.md.svg"> <img src="https://img.shields.io/github/issues/pandao/editor.md.svg"> <img src="https://img.shields.io/bower/v/editor.md.svg"></p><p><strong>目录 (Table of Contents)</strong></p><h1 id="Heading-1"><a href="#Heading-1" class="headerlink" title="Heading 1"></a>Heading 1</h1><h2 id="Heading-2"><a href="#Heading-2" class="headerlink" title="Heading 2"></a>Heading 2</h2><h3 id="Heading-3"><a href="#Heading-3" class="headerlink" title="Heading 3"></a>Heading 3</h3><h4 id="Heading-4"><a href="#Heading-4" class="headerlink" title="Heading 4"></a>Heading 4</h4><h5 id="Heading-5"><a href="#Heading-5" class="headerlink" title="Heading 5"></a>Heading 5</h5><h6 id="Heading-6"><a href="#Heading-6" class="headerlink" title="Heading 6"></a>Heading 6</h6><h1 id="Heading-1-link-Heading-link"><a href="#Heading-1-link-Heading-link" class="headerlink" title="Heading 1 link Heading link"></a>Heading 1 link <a href="https://github.com/pandao/editor.md" title="Heading link">Heading link</a></h1><h2 id="Heading-2-link-Heading-link"><a href="#Heading-2-link-Heading-link" class="headerlink" title="Heading 2 link Heading link"></a>Heading 2 link <a href="https://github.com/pandao/editor.md" title="Heading link">Heading link</a></h2><h3 id="Heading-3-link-Heading-link"><a href="#Heading-3-link-Heading-link" class="headerlink" title="Heading 3 link Heading link"></a>Heading 3 link <a href="https://github.com/pandao/editor.md" title="Heading link">Heading link</a></h3><h4 id="Heading-4-link-Heading-link-Heading-link-Heading-link"><a href="#Heading-4-link-Heading-link-Heading-link-Heading-link" class="headerlink" title="Heading 4 link Heading link Heading link Heading link"></a>Heading 4 link <a href="https://github.com/pandao/editor.md" title="Heading link">Heading link</a> Heading link <a href="https://github.com/pandao/editor.md" title="Heading link">Heading link</a></h4><h5 id="Heading-5-link-Heading-link"><a href="#Heading-5-link-Heading-link" class="headerlink" title="Heading 5 link Heading link"></a>Heading 5 link <a href="https://github.com/pandao/editor.md" title="Heading link">Heading link</a></h5><h6 id="Heading-6-link-Heading-link"><a href="#Heading-6-link-Heading-link" class="headerlink" title="Heading 6 link Heading link"></a>Heading 6 link <a href="https://github.com/pandao/editor.md" title="Heading link">Heading link</a></h6><h4 id="标题（用底线的形式）Heading-underline"><a href="#标题（用底线的形式）Heading-underline" class="headerlink" title="标题（用底线的形式）Heading (underline)"></a>标题（用底线的形式）Heading (underline)</h4><h1 id="This-is-an-H1"><a href="#This-is-an-H1" class="headerlink" title="This is an H1"></a>This is an H1</h1><h2 id="This-is-an-H2"><a href="#This-is-an-H2" class="headerlink" title="This is an H2"></a>This is an H2</h2><h3 id="字符效果和横线等"><a href="#字符效果和横线等" class="headerlink" title="字符效果和横线等"></a>字符效果和横线等</h3><hr><p><del>删除线</del> <s>删除线（开启识别HTML标签时）</s><br><em>斜体字</em>      <em>斜体字</em><br><strong>粗体</strong>  <strong>粗体</strong><br><em><strong>粗斜体</strong></em> <em><strong>粗斜体</strong></em></p><p>上标：X<sub>2</sub>，下标：O<sup>2</sup></p><p><strong>缩写(同HTML的abbr标签)</strong></p><blockquote><p>即更长的单词或短语的缩写形式，前提是开启识别HTML标签时，已默认开启</p></blockquote><p>The <abbr title="Hyper Text Markup Language">HTML</abbr> specification is maintained by the <abbr title="World Wide Web Consortium">W3C</abbr>.</p><h3 id="引用-Blockquotes"><a href="#引用-Blockquotes" class="headerlink" title="引用 Blockquotes"></a>引用 Blockquotes</h3><blockquote><p>引用文本 Blockquotes</p></blockquote><p>引用的行内混合 Blockquotes</p><blockquote><p>引用：如果想要插入空白换行<code>即&lt;br /&gt;标签</code>，在插入处先键入两个以上的空格然后回车即可，<a href="http://localhost/">普通链接</a>。</p></blockquote><h3 id="锚点与链接-Links"><a href="#锚点与链接-Links" class="headerlink" title="锚点与链接 Links"></a>锚点与链接 Links</h3><p><a href="http://localhost/">普通链接</a></p><p><a href="http://localhost/" title="普通链接带标题">普通链接带标题</a></p><p>直接链接：<a href="https://github.com/">https://github.com</a></p><p><a href="http://www.this-anchor-link.com/">锚点链接</a> </p><p><a href="mailto:test.test@gmail.com">mailto:test.test@gmail.com</a></p><p>GFM a-tail link @pandao  邮箱地址自动链接 <a href="mailto:&#x74;&#101;&#x73;&#x74;&#46;&#x74;&#101;&#x73;&#116;&#64;&#x67;&#x6d;&#97;&#x69;&#108;&#x2e;&#x63;&#111;&#x6d;">&#x74;&#101;&#x73;&#x74;&#46;&#x74;&#101;&#x73;&#116;&#64;&#x67;&#x6d;&#97;&#x69;&#108;&#x2e;&#x63;&#111;&#x6d;</a>  <a href="mailto:&#119;&#119;&#119;&#x40;&#x76;&#x69;&#x70;&#46;&#113;&#x71;&#x2e;&#99;&#111;&#x6d;">&#119;&#119;&#119;&#x40;&#x76;&#x69;&#x70;&#46;&#113;&#x71;&#x2e;&#99;&#111;&#x6d;</a></p><blockquote><p>@pandao</p></blockquote><h3 id="多语言代码高亮-Codes"><a href="#多语言代码高亮-Codes" class="headerlink" title="多语言代码高亮 Codes"></a>多语言代码高亮 Codes</h3><h4 id="行内代码-Inline-code"><a href="#行内代码-Inline-code" class="headerlink" title="行内代码 Inline code"></a>行内代码 Inline code</h4><p>执行命令：<code>npm install marked</code></p><h4 id="缩进风格"><a href="#缩进风格" class="headerlink" title="缩进风格"></a>缩进风格</h4><p>即缩进四个空格，也做为实现类似 <code>&lt;pre&gt;</code> 预格式化文本 ( Preformatted Text ) 的功能。</p><pre><code>&lt;?php    echo &quot;Hello world!&quot;;?&gt;</code></pre><p>预格式化文本：</p><pre><code>| First Header  | Second Header || ------------- | ------------- || Content Cell  | Content Cell  || Content Cell  | Content Cell  |</code></pre><h4 id="JS代码"><a href="#JS代码" class="headerlink" title="JS代码"></a>JS代码</h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">test</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;Hello world!&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">(<span class="keyword">function</span>(<span class="params"></span>)&#123;</span><br><span class="line">    <span class="keyword">var</span> box = <span class="keyword">function</span>(<span class="params"></span>) &#123;</span><br><span class="line">        <span class="keyword">return</span> box.<span class="property">fn</span>.<span class="title function_">init</span>();</span><br><span class="line">    &#125;;</span><br><span class="line"></span><br><span class="line">    box.<span class="property"><span class="keyword">prototype</span></span> = box.<span class="property">fn</span> = &#123;</span><br><span class="line">        init : <span class="keyword">function</span>(<span class="params"></span>)&#123;</span><br><span class="line">            <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;box.init()&#x27;</span>);</span><br><span class="line"></span><br><span class="line">            <span class="keyword">return</span> <span class="variable language_">this</span>;</span><br><span class="line">        &#125;,</span><br><span class="line"></span><br><span class="line">        add : <span class="keyword">function</span>(<span class="params">str</span>) &#123;</span><br><span class="line">            <span class="title function_">alert</span>(<span class="string">&quot;add&quot;</span>, str);</span><br><span class="line"></span><br><span class="line">            <span class="keyword">return</span> <span class="variable language_">this</span>;</span><br><span class="line">        &#125;,</span><br><span class="line"></span><br><span class="line">        remove : <span class="keyword">function</span>(<span class="params">str</span>) &#123;</span><br><span class="line">            <span class="title function_">alert</span>(<span class="string">&quot;remove&quot;</span>, str);</span><br><span class="line"></span><br><span class="line">            <span class="keyword">return</span> <span class="variable language_">this</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;;</span><br><span class="line"></span><br><span class="line">    box.<span class="property">fn</span>.<span class="property">init</span>.<span class="property"><span class="keyword">prototype</span></span> = box.<span class="property">fn</span>;</span><br><span class="line"></span><br><span class="line">    <span class="variable language_">window</span>.<span class="property">box</span> =box;</span><br><span class="line">&#125;)();</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> testBox = <span class="title function_">box</span>();</span><br><span class="line">testBox.<span class="title function_">add</span>(<span class="string">&quot;jQuery&quot;</span>).<span class="title function_">remove</span>(<span class="string">&quot;jQuery&quot;</span>);</span><br></pre></td></tr></table></figure><h4 id="HTML-代码-HTML-codes"><a href="#HTML-代码-HTML-codes" class="headerlink" title="HTML 代码 HTML codes"></a>HTML 代码 HTML codes</h4><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">mate</span> <span class="attr">charest</span>=<span class="string">&quot;utf-8&quot;</span> /&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;keywords&quot;</span> <span class="attr">content</span>=<span class="string">&quot;Editor.md, Markdown, Editor&quot;</span> /&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">title</span>&gt;</span>Hello world!<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">style</span> <span class="attr">type</span>=<span class="string">&quot;text/css&quot;</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css">            <span class="selector-tag">body</span>&#123;<span class="attribute">font-size</span>:<span class="number">14px</span>;<span class="attribute">color</span>:<span class="number">#444</span>;<span class="attribute">font-family</span>: <span class="string">&quot;Microsoft Yahei&quot;</span>, Tahoma, <span class="string">&quot;Hiragino Sans GB&quot;</span>, Arial;<span class="attribute">background</span>:<span class="number">#fff</span>;&#125;</span></span><br><span class="line"><span class="language-css">            <span class="selector-tag">ul</span>&#123;<span class="attribute">list-style</span>: none;&#125;</span></span><br><span class="line"><span class="language-css">            <span class="selector-tag">img</span>&#123;<span class="attribute">border</span>:none;<span class="attribute">vertical-align</span>: middle;&#125;</span></span><br><span class="line"><span class="language-css">        </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">h1</span> <span class="attr">class</span>=<span class="string">&quot;text-xxl&quot;</span>&gt;</span>Hello world!<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">p</span> <span class="attr">class</span>=<span class="string">&quot;text-green&quot;</span>&gt;</span>Plain text<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="图片-Images"><a href="#图片-Images" class="headerlink" title="图片 Images"></a>图片 Images</h3><p>Image:</p><p><img src="https://pandao.github.io/editor.md/examples/images/4.jpg"></p><blockquote><p>Follow your heart.</p></blockquote><p><img src="https://pandao.github.io/editor.md/examples/images/8.jpg"></p><blockquote><p>图为：厦门白城沙滩</p></blockquote><p>图片加链接 (Image + Link)：</p><p><a href="https://pandao.github.io/editor.md/images/7.jpg" title="李健首张专辑《似水流年》封面"><img src="https://pandao.github.io/editor.md/examples/images/7.jpg"></a></p><blockquote><p>图为：李健首张专辑《似水流年》封面</p></blockquote><hr><h3 id="列表-Lists"><a href="#列表-Lists" class="headerlink" title="列表 Lists"></a>列表 Lists</h3><h4 id="无序列表（减号）Unordered-Lists"><a href="#无序列表（减号）Unordered-Lists" class="headerlink" title="无序列表（减号）Unordered Lists (-)"></a>无序列表（减号）Unordered Lists (-)</h4><ul><li>列表一</li><li>列表二</li><li>列表三</li></ul><h4 id="无序列表（星号）Unordered-Lists"><a href="#无序列表（星号）Unordered-Lists" class="headerlink" title="无序列表（星号）Unordered Lists (*)"></a>无序列表（星号）Unordered Lists (*)</h4><ul><li>列表一</li><li>列表二</li><li>列表三</li></ul><h4 id="无序列表（加号和嵌套）Unordered-Lists"><a href="#无序列表（加号和嵌套）Unordered-Lists" class="headerlink" title="无序列表（加号和嵌套）Unordered Lists (+)"></a>无序列表（加号和嵌套）Unordered Lists (+)</h4><ul><li>列表一</li><li>列表二<ul><li>列表二-1</li><li>列表二-2</li><li>列表二-3</li></ul></li><li>列表三<ul><li>列表一</li><li>列表二</li><li>列表三</li></ul></li></ul><h4 id="有序列表-Ordered-Lists"><a href="#有序列表-Ordered-Lists" class="headerlink" title="有序列表 Ordered Lists (-)"></a>有序列表 Ordered Lists (-)</h4><ol><li>第一行</li><li>第二行</li><li>第三行</li></ol><h4 id="GFM-task-list"><a href="#GFM-task-list" class="headerlink" title="GFM task list"></a>GFM task list</h4><ul><li><input checked="" disabled="" type="checkbox"> GFM task list 1</li><li><input checked="" disabled="" type="checkbox"> GFM task list 2</li><li><input disabled="" type="checkbox"> GFM task list 3<ul><li><input disabled="" type="checkbox"> GFM task list 3-1</li><li><input disabled="" type="checkbox"> GFM task list 3-2</li><li><input disabled="" type="checkbox"> GFM task list 3-3</li></ul></li><li><input disabled="" type="checkbox"> GFM task list 4<ul><li><input disabled="" type="checkbox"> GFM task list 4-1</li><li><input disabled="" type="checkbox"> GFM task list 4-2</li></ul></li></ul><hr><h3 id="绘制表格-Tables"><a href="#绘制表格-Tables" class="headerlink" title="绘制表格 Tables"></a>绘制表格 Tables</h3><table><thead><tr><th>项目</th><th align="right">价格</th><th align="center">数量</th></tr></thead><tbody><tr><td>计算机</td><td align="right">$1600</td><td align="center">5</td></tr><tr><td>手机</td><td align="right">$12</td><td align="center">12</td></tr><tr><td>管线</td><td align="right">$1</td><td align="center">234</td></tr></tbody></table><table><thead><tr><th>First Header</th><th>Second Header</th></tr></thead><tbody><tr><td>Content Cell</td><td>Content Cell</td></tr><tr><td>Content Cell</td><td>Content Cell</td></tr></tbody></table><table><thead><tr><th>First Header</th><th>Second Header</th></tr></thead><tbody><tr><td>Content Cell</td><td>Content Cell</td></tr><tr><td>Content Cell</td><td>Content Cell</td></tr></tbody></table><table><thead><tr><th>Function name</th><th>Description</th></tr></thead><tbody><tr><td><code>help()</code></td><td>Display the help window.</td></tr><tr><td><code>destroy()</code></td><td><strong>Destroy your computer!</strong></td></tr></tbody></table><table><thead><tr><th align="left">Left-Aligned</th><th align="center">Center Aligned</th><th align="right">Right Aligned</th></tr></thead><tbody><tr><td align="left">col 3 is</td><td align="center">some wordy text</td><td align="right">$1600</td></tr><tr><td align="left">col 2 is</td><td align="center">centered</td><td align="right">$12</td></tr><tr><td align="left">zebra stripes</td><td align="center">are neat</td><td align="right">$1</td></tr></tbody></table><table><thead><tr><th>Item</th><th align="right">Value</th></tr></thead><tbody><tr><td>Computer</td><td align="right">$1600</td></tr><tr><td>Phone</td><td align="right">$12</td></tr><tr><td>Pipe</td><td align="right">$1</td></tr></tbody></table><hr><h4 id="特殊符号-HTML-Entities-Codes"><a href="#特殊符号-HTML-Entities-Codes" class="headerlink" title="特殊符号 HTML Entities Codes"></a>特殊符号 HTML Entities Codes</h4><p>&copy; &amp;  &uml; &trade; &iexcl; &pound;<br>&amp; &lt; &gt; &yen; &euro; &reg; &plusmn; &para; &sect; &brvbar; &macr; &laquo; &middot; </p><p>X&sup2; Y&sup3; &frac34; &frac14;  &times;  &divide;   &raquo;</p><p>18&ordm;C  &quot;  &apos;</p><p>[&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;]</p><h3 id="Emoji表情-smiley"><a href="#Emoji表情-smiley" class="headerlink" title="Emoji表情 :smiley:"></a>Emoji表情 :smiley:</h3><blockquote><p>Blockquotes :star:</p></blockquote><h4 id="GFM-task-lists-Emoji-fontAwesome-icon-emoji-editormd-logo-emoji-editormd-logo-5x"><a href="#GFM-task-lists-Emoji-fontAwesome-icon-emoji-editormd-logo-emoji-editormd-logo-5x" class="headerlink" title="GFM task lists &amp; Emoji &amp; fontAwesome icon emoji &amp; editormd logo emoji :editormd-logo-5x:"></a>GFM task lists &amp; Emoji &amp; fontAwesome icon emoji &amp; editormd logo emoji :editormd-logo-5x:</h4><ul><li><input checked="" disabled="" type="checkbox"> :smiley: @mentions, :smiley: #refs, <a href="">links</a>, <strong>formatting</strong>, and <del>tags</del> supported :editormd-logo:;</li><li><input checked="" disabled="" type="checkbox"> list syntax required (any unordered or ordered list supported) :editormd-logo-3x:;</li><li><input checked="" disabled="" type="checkbox"> [ ] :smiley: this is a complete item :smiley:;</li><li><input disabled="" type="checkbox"> []this is an incomplete item <a href="#">test link</a> :fa-star: @pandao; </li><li><input disabled="" type="checkbox"> [ ]this is an incomplete item :fa-star: :fa-gear:;<ul><li><input disabled="" type="checkbox"> :smiley: this is an incomplete item <a href="#">test link</a> :fa-star: :fa-gear:;</li><li><input disabled="" type="checkbox"> :smiley: this is  :fa-star: :fa-gear: an incomplete item <a href="#">test link</a>;</li></ul></li></ul><h4 id="反斜杠-Escape"><a href="#反斜杠-Escape" class="headerlink" title="反斜杠 Escape"></a>反斜杠 Escape</h4><p>*literal asterisks*</p><p>[&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;]</p><h3 id="科学公式-TeX-KaTeX"><a href="#科学公式-TeX-KaTeX" class="headerlink" title="科学公式 TeX(KaTeX)"></a>科学公式 TeX(KaTeX)</h3><p>$$E&#x3D;mc^2$$</p><p>行内的公式$$E&#x3D;mc^2$$行内的公式，行内的$$E&#x3D;mc^2$$公式。</p><p>$$x &gt; y$$</p><p>$$(\sqrt{3x-1}+(1+x)^2)$$</p><p>$$\sin(\alpha)^{\theta}&#x3D;\sum_{i&#x3D;0}^{n}(x^i + \cos(f))$$</p><p>多行公式：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">\displaystyle</span><br><span class="line">\left( \sum\_&#123;k=1&#125;^n a\_k b\_k \right)^2</span><br><span class="line">\leq</span><br><span class="line">\left( \sum\_&#123;k=1&#125;^n a\_k^2 \right)</span><br><span class="line">\left( \sum\_&#123;k=1&#125;^n b\_k^2 \right)</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">\displaystyle </span><br><span class="line">    \frac&#123;1&#125;&#123;</span><br><span class="line">        \Bigl(\sqrt&#123;\phi \sqrt&#123;5&#125;&#125;-\phi\Bigr) e^&#123;</span><br><span class="line">        \frac25 \pi&#125;&#125; = 1+\frac&#123;e^&#123;-2\pi&#125;&#125; &#123;1+\frac&#123;e^&#123;-4\pi&#125;&#125; &#123;</span><br><span class="line">        1+\frac&#123;e^&#123;-6\pi&#125;&#125;</span><br><span class="line">        &#123;1+\frac&#123;e^&#123;-8\pi&#125;&#125;</span><br><span class="line">         &#123;1+\cdots&#125; &#125;</span><br><span class="line">        &#125; </span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><figure class="highlight latex"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">f(x) = <span class="keyword">\int</span><span class="built_in">_</span>&#123;-<span class="keyword">\infty</span>&#125;<span class="built_in">^</span><span class="keyword">\infty</span></span><br><span class="line">    <span class="keyword">\hat</span> f(<span class="keyword">\xi</span>)<span class="keyword">\,</span>e<span class="built_in">^</span>&#123;2 <span class="keyword">\pi</span> i <span class="keyword">\xi</span> x&#125;</span><br><span class="line">    <span class="keyword">\,</span>d<span class="keyword">\xi</span></span><br></pre></td></tr></table></figure><h3 id="分页符-Page-break"><a href="#分页符-Page-break" class="headerlink" title="分页符 Page break"></a>分页符 Page break</h3><blockquote><p>Print Test: Ctrl + P</p></blockquote><p>[&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;]</p><h3 id="绘制流程图-Flowchart"><a href="#绘制流程图-Flowchart" class="headerlink" title="绘制流程图 Flowchart"></a>绘制流程图 Flowchart</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">st=&gt;start: 用户登陆</span><br><span class="line">op=&gt;operation: 登陆操作</span><br><span class="line">cond=&gt;condition: 登陆成功 Yes or No?</span><br><span class="line">e=&gt;end: 进入后台</span><br><span class="line"></span><br><span class="line">st-&gt;op-&gt;cond</span><br><span class="line">cond(yes)-&gt;e</span><br><span class="line">cond(no)-&gt;op</span><br></pre></td></tr></table></figure><p>[&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;]</p><h3 id="绘制序列图-Sequence-Diagram"><a href="#绘制序列图-Sequence-Diagram" class="headerlink" title="绘制序列图 Sequence Diagram"></a>绘制序列图 Sequence Diagram</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">Andrew-&gt;China: Says Hello </span><br><span class="line">Note right of China: China thinks\nabout it </span><br><span class="line">China--&gt;Andrew: How are you? </span><br><span class="line">Andrew-&gt;&gt;China: I am good thanks!</span><br></pre></td></tr></table></figure><h3 id="End"><a href="#End" class="headerlink" title="End"></a>End</h3>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;Editor-md&quot;&gt;&lt;a href=&quot;#Editor-md&quot; class=&quot;headerlink&quot; title=&quot;Editor.md&quot;&gt;&lt;/a&gt;Editor.md&lt;/h1&gt;&lt;p&gt;&lt;img src=&quot;https://pandao.github.io/editor.</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>了解GitHub</title>
    <link href="http://example.com/2023/05/25/git-introduce/"/>
    <id>http://example.com/2023/05/25/git-introduce/</id>
    <published>2023-05-25T10:12:20.000Z</published>
    <updated>2023-08-27T14:00:56.870Z</updated>
    
    <content type="html"><![CDATA[<p><img src="https://cxb7.oss-cn-hangzhou.aliyuncs.com/v2_3649e6221eac4983b4ec6bb779617131_img_000.jpg"> </p><h1 id="了解-GitHub：社交编程平台"><a href="#了解-GitHub：社交编程平台" class="headerlink" title="了解 GitHub：社交编程平台"></a>了解 GitHub：社交编程平台</h1><p>  GitHub 是一个广受欢迎的社交编程平台，为开发者提供了协作、版本控制和代码托管等功能。它已经成为开源项目、个人开发者和企业团队的首选工具之一。本文将向你介绍 GitHub 的主要特点和优势。</p><h2 id="特点与功能"><a href="#特点与功能" class="headerlink" title="特点与功能"></a>特点与功能</h2><h3 id="1-代码托管"><a href="#1-代码托管" class="headerlink" title="1. 代码托管"></a>1. 代码托管</h3><p>  GitHub 提供了强大的代码托管功能，允许开发者将代码仓库存储在云端。每个项目都有一个独特的仓库，你可以在其中存储代码、文档、图片等。你可以使用 Git 来管理和追踪代码变更，这使得协作变得更加高效。</p><h3 id="2-分布式版本控制"><a href="#2-分布式版本控制" class="headerlink" title="2. 分布式版本控制"></a>2. 分布式版本控制</h3><p>  GitHub 使用 Git 进行版本控制，这意味着你可以跟踪代码的每一个修改和提交。你可以创建分支来开发新功能，然后将其合并回主分支。这使得多人协作变得容易，同时也保护了代码库的稳定性。</p><h3 id="3-协作与讨论"><a href="#3-协作与讨论" class="headerlink" title="3. 协作与讨论"></a>3. 协作与讨论</h3><p>  GitHub 提供了 issue 和 pull request 功能，用于协作和讨论代码。你可以提交问题（issue）来报告 Bug 或提出功能请求，其他开发者可以在其中进行评论。通过 pull request，你可以将自己的代码变更推送到项目中，其他人可以审查代码并提供反馈。</p><h3 id="4-开源社区"><a href="#4-开源社区" class="headerlink" title="4. 开源社区"></a>4. 开源社区</h3><p>  GitHub 是全球最大的开源社区之一。数以万计的开源项目托管在 GitHub 上，这为开发者提供了学习、贡献和展示自己的机会。你可以浏览各种项目，了解最新的技术趋势，并为自己喜欢的项目做出贡献。</p><h2 id="GitHub-的优势"><a href="#GitHub-的优势" class="headerlink" title="GitHub 的优势"></a>GitHub 的优势</h2><h3 id="1-可视化界面"><a href="#1-可视化界面" class="headerlink" title="1. 可视化界面"></a>1. 可视化界面</h3><p>  GitHub 提供了直观的可视化界面，使得代码仓库的管理变得简单。你可以在网页上浏览文件、提交历史，甚至进行代码比较。这对于非技术人员和初学者来说尤其有帮助。</p><h3 id="2-学习资源"><a href="#2-学习资源" class="headerlink" title="2. 学习资源"></a>2. 学习资源</h3><p>  GitHub 不仅仅是一个代码托管平台，还是一个巨大的学习资源库。你可以在上面找到各种编程语言和技术的示例代码，以及开发教程和指南。这对于新手来说是一个宝藏。</p><h3 id="3-良好的工作流"><a href="#3-良好的工作流" class="headerlink" title="3. 良好的工作流"></a>3. 良好的工作流</h3><p>  GitHub 通过分支、合并请求和代码审查等功能，构建了一套高效的工作流程。这有助于团队协作，提高代码质量，减少冲突和错误。</p><h3 id="4-项目托管与演示"><a href="#4-项目托管与演示" class="headerlink" title="4. 项目托管与演示"></a>4. 项目托管与演示</h3><p>  不仅仅是代码，GitHub 还可以托管各种项目文档、网站和演示。你可以使用 GitHub Pages 功能来托管静态网站，将你的项目展示给他人。</p><h2 id="Last"><a href="#Last" class="headerlink" title="Last"></a>Last</h2><p>  GitHub 在全球范围内连接了数百万开发者，成为了一个充满活力和创新的社区。无论是个人项目还是大型团队合作，GitHub 都为开发者提供了丰富的工具和资源，帮助他们更轻松地构建、协作和展示自己的项目。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;&lt;img src=&quot;https://cxb7.oss-cn-hangzhou.aliyuncs.com/v2_3649e6221eac4983b4ec6bb779617131_img_000.jpg&quot;&gt; &lt;/p&gt;
&lt;h1 id=&quot;了解-GitHub：社交编程平台&quot;&gt;&lt;a h</summary>
      
    
    
    
    <category term="Git" scheme="http://example.com/categories/Git/"/>
    
    
  </entry>
  
  <entry>
    <title>my-blog</title>
    <link href="http://example.com/2023/03/26/my-blog/"/>
    <id>http://example.com/2023/03/26/my-blog/</id>
    <published>2023-03-26T09:34:02.000Z</published>
    <updated>2023-08-27T14:01:48.945Z</updated>
    
    <content type="html"><![CDATA[<h1 id="It-s-my-blog"><a href="#It-s-my-blog" class="headerlink" title="It&#96;s my blog"></a>It&#96;s my blog</h1><p><img src="https://images.pexels.com/photos/18015009/pexels-photo-18015009.jpeg?auto=compress&cs=tinysrgb&w=1260&h=750&dpr=1"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;It-s-my-blog&quot;&gt;&lt;a href=&quot;#It-s-my-blog&quot; class=&quot;headerlink&quot; title=&quot;It&amp;#96;s my blog&quot;&gt;&lt;/a&gt;It&amp;#96;s my blog&lt;/h1&gt;&lt;p&gt;&lt;img src=&quot;https://imag</summary>
      
    
    
    
    <category term="1" scheme="http://example.com/categories/1/"/>
    
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="http://example.com/2023/02/21/hello-world/"/>
    <id>http://example.com/2023/02/21/hello-world/</id>
    <published>2023-02-21T09:34:02.000Z</published>
    <updated>2023-08-27T14:02:21.154Z</updated>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://hexo.io/docs/&quot;&gt;documentation&lt;/a&gt; for</summary>
      
    
    
    
    
  </entry>
  
</feed>
